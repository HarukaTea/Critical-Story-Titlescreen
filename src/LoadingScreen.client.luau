--!nocheck

local Debris = game:GetService("Debris")
local Players = game:GetService("Players")
local ReplicatedFirst = game:GetService("ReplicatedFirst")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local RunService = game:GetService("RunService")
local StarterGui = game:GetService("StarterGui")
local TeleportService = game:GetService("TeleportService")
local TweenService = game:GetService("TweenService")

local plr = Players.LocalPlayer

local loadFinished = false

local function setup()
    ReplicatedFirst:RemoveDefaultLoadingScreen()
    StarterGui:SetCoreGuiEnabled(Enum.CoreGuiType.All, false)

    -- auto-generated by `Condify`
    local loadingScreen = Instance.new("ScreenGui")
    loadingScreen.Name = "LoadingScreen"
    loadingScreen.DisplayOrder = 10
    loadingScreen.IgnoreGuiInset = true
    loadingScreen.ScreenInsets = Enum.ScreenInsets.DeviceSafeInsets
    loadingScreen.ResetOnSpawn = false
    loadingScreen.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

    local bG = Instance.new("Frame")
    bG.Name = "BG"
    bG.AnchorPoint = Vector2.new(0.5, 0.5)
    bG.BackgroundColor3 = Color3.fromRGB(223, 223, 223)
    bG.Position = UDim2.fromScale(0.5, 0.5)
    bG.Size = UDim2.fromScale(1, 1)

    local loadingTip = Instance.new("TextLabel")
    loadingTip.Name = "LoadingTip"
    loadingTip.FontFace = Font.new(
        "rbxasset://fonts/families/SourceSansPro.json",
        Enum.FontWeight.Bold
    )
    loadingTip.Text = "LOADING ADVENTURE..."
    loadingTip.TextColor3 = Color3.fromRGB(0, 0, 0)
    loadingTip.TextScaled = true
    loadingTip.AnchorPoint = Vector2.new(0.5, 0.5)
    loadingTip.BackgroundTransparency = 1
    loadingTip.Position = UDim2.fromScale(0.5, 0.5)
    loadingTip.Size = UDim2.fromScale(1, 0.07)

    local uITextSizeConstraint = Instance.new("UITextSizeConstraint")
    uITextSizeConstraint.MaxTextSize = 36
    uITextSizeConstraint.Parent = loadingTip

    loadingTip.Parent = bG
    bG.Parent = loadingScreen
    loadingScreen.Parent = plr.PlayerGui

    task.delay(9, function()
        if loadFinished then return end

        loadingTip.Text = "ADVENTURE IS TAKING LONGER TO LOAD..."
    end)
    task.delay(20, function()
        if loadFinished then return end

        loadingTip.Text = "ADVENTURE IS STILL LOADING..."
    end)

    --- wait until data loads
    repeat RunService.Heartbeat:Wait() until plr:GetAttribute("PlayerDataLoaded1")
    repeat RunService.Heartbeat:Wait() until plr:GetAttribute("PlayerDataLoaded2")
    repeat RunService.Heartbeat:Wait() until plr:GetAttribute("PlayerDataLoaded3")

    loadingTip.Text = "LOADED ADVENTURE!"

    loadFinished = true
    print("Load Finished")

    local camera = workspace.CurrentCamera
    camera.CameraType = Enum.CameraType.Scriptable
    camera.CFrame = CFrame.new(121, 112.7, 1832.6, -1, 0, 0, 0, 1, 0.04, 0, 0.04, -1)

    --- fade out
    local halfTween = TweenInfo.new(0.5)

    TweenService:Create(loadingTip, halfTween, { TextTransparency = 1 }):Play()
    TweenService:Create(bG, halfTween, { BackgroundTransparency = 1 }):Play()
    Debris:AddItem(loadingScreen, 0.5)

    task.spawn(function()
        --- sometimes, uh, pretty rare situation
        workspace:WaitForChild("Sounds", 999).TitleScreen:Play()
    end)

    --// Play the cutscene
    local HarukaLib = require(ReplicatedStorage:WaitForChild("Modules", 999).Packages.HarukaLib)

    HarukaLib:PlayCutscene(workspace:WaitForChild("MapComponents", 999).IntroCutscene, 12)

    --// Set teleport gui
    TeleportService:SetTeleportGui(ReplicatedStorage:WaitForChild("Package", 999).Unloads.TeleportUI)
end
setup()
